#libraries
library(tswge)
library(dplyr)
library(tidyverse)
library(readxl)
# Set this to data folder for your file
setwd("/Users/mingyang/Desktop/SMU/TimeSeries/TimeSeriesFinalProject/data")
# Read in DFWA electricity Data
dfwa.electricity = read.csv("AVG_ELEC_DFWA_TX.csv",col.names = c("DATE", "AVG_EP"),
colClasses = c(DATE="character", AVG_EP="character"))
# Read in CPI data for Southern Urban area
cpi = read_excel("SouthernUrbanCPI.xlsx",sheet = "BLS Data Series", skip = 11)
# Getting rid of Half1 and Half2 which starts with S
cpi = cpi %>% filter(!grepl('S',Period) )
# Getting rid of Annual which labeled as M13
cpi = cpi %>% filter(!grepl('M13',Period) )
# Read in Gas Price data from same area
gas.price = read.csv("Dallas_FWA_GAS.csv")
# Read in Temperature Data & cleaning
temp = read_excel("DallasAreaTemp.xlsx", sheet = "Sheet1")
temp = temp %>% tidyr::pivot_longer(
cols = starts_with("Mon_"),
names_to = "Month",
values_to = "Temperature"
)
temp = temp[1:386,]
# subset dataset
# which(dfwa.electricity$DATE=="1990-01-01") # 135
dfwa.electricity = dfwa.electricity[135:520,]
rownames(dfwa.electricity) <- 1:nrow(dfwa.electricity)
# which(cpi$Year==1990 & cpi$Period=="M01")
cpi = cpi[91:476,]
rownames(cpi) <- 1:nrow(cpi)
# which(gas.price$DATE=="1990-01-01") # 145
gas.price = gas.price[145:530,]
rownames(gas.price) <- 1:nrow(gas.price)
#### Creating ultimate data frame under variable 'df' ####
df = dfwa.electricity
df$CPI = cpi$Value
df$GAS_P = gas.price$APUS37A7471A
df$AVG_EP = as.numeric(df$AVG_EP)
df$TEMP = temp$Temperature
plotts.wge(df$AVG_EP)
plotts.wge(df$CPI)
plotts.wge(df$GAS_P)
plotts.wge(df$TEMP)
#### Due to distribution market deregulation in 1995, team decided to cut the realization
#### prior to 2000
which(df$DATE=="2000-01-01")
#### Due to distribution market deregulation in 1995, team decided to cut the realization
#### prior to 2000
# which(df$DATE=="2000-01-01") # 121
df = df[121:386,]
df(head)
head(df)
rownames(df) <- 1:nrow(df)
plotts.wge(df$AVG_EP)
plotts.wge(df$CPI)
plotts.wge(df$GAS_P)
plotts.wge(df$TEMP)
library(nnfor)
?forecast
library(nnfor)
setwd("/Users/mingyang/Desktop/SMU/TimeSeries/ForLiveSession/Unit13")
swa = read.csv("swadelay.csv")
head(swa)
nrow(swa)
SWATrain = ts(swa$arr_delay[1:141], start = c(2004, 1), frequency=12)
SWATest = ts(swa$arr_delay[142:177], start = c(2015, 10), frequency=12)
set.seed(2)
fit.mlp = mlp(SWATrain, reps=50, comb='mean')
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h=36)
plot(fore.mlp)
?forecast
forecast
??forecast
?forecast()
?forecast
plotts.sample.wge(df$AVG_EP)
# Try overfitting
est.ar.wge(df$AVG_EP, p=16, type='burg')
# Try overfitting
est = est.ar.wge(df$AVG_EP, p=16, type='burg')
# compare this to seasonality of 12
factor.wge(phi = c(rep(0,11),1))
d1 = artrans.wge(df$AVG_EP, phi.tr = 1)
# with the differenced data there seem to have some sort of seasonal behavior at 12 left
d1.12 = artrans.wge(d1, phi.tr = c(rep(0,11),1))
# with the differenced data there seem to have some sort of seasonal behavior at 12 left
est1 = est.ar.wge(d1, p=15, type='burg')
acf(d1.12)
dev.off()
acf(d1.12)
# although the transformed d1.12 data appear to be white noise, the large dip at lag 13 suggest that modeling should continue
est1.12 = aic5.wge(d1.12, p=0:15, q=0:5)
est1.12
est.1.12.bic = aic.wge(d1.12, p=0:15, q=0:5, type = 'bic')
est.1.12.bic
est.1.12.aicc = aic.wge(d1.12, p=0:15, q=0:5, type = 'aicc') #
est.1.12.aicc
est.1.12.bic = aic5.wge(d1.12, p=0:15, q=0:5, type = 'bic') # bic picked p=13, q=5
est.1.12.aicc = aic5.wge(d1.12, p=0:15, q=0:5, type = 'aicc') #
est.1.12.bic
est.1.12.aicc
# seems aicc and aic both agrees on p=13 and q=5 is best option.
params.est = est.arma.wge(d1.12, p=13, q=5)
?fore.arima.wge
pred.short = fore.arima.wge(df$AVG_EP, phi = params.est$phi, theta = params.est$theta,
d = 1, s = 12, n.ahead = 3, limits = T, lastn = T)
dim(df$AVG_EP)
length(df$AVG_EP)
df$AVG_EP[264:266]
pred.short$f
ASE.short = mean((df$AVG_EP[264:266]-pred.short$f)^2)
ASE.short
3.184093e-05
pred.long = fore.arima.wge(df$AVG_EP, phi = params.est$phi, theta = params.est$theta,
d = 1, s = 12, n.ahead = 36, limits = T, lastn = T)
df$AVG_EP[266-36+1:266]
df$AVG_EP[(266-36+1):266]
pred.long$f
ASE.long = mean((df$AVG_EP[(266-36+1):266]-pred.long$f)^2)
ASE.long
?roll.win.rmse.wge
rolling.res.short = roll.win.rmse.wge(df$AVG_EP,phi = params.est$phi, theta = params.est$theta,
d = 1, s = 12, horizon = 3 )
0.004^2
rolling.res.short # RMSE = 0.004, ASE = 1.6e-0.5 -> 0.000016, nums of windows = 232
rolling.res.long = roll.win.rmse.wge(df$AVG_EP,phi = params.est$phi, theta = params.est$theta,
d = 1, s = 12, horizon = 36)
0.019^2
acf(params.est$res)
ljung.wge(params.est$res)
params.est
ljung.wge(params.est$res, K=48)
ljung.wge(params.est$res, K=24)
?ljung.wge
rolling.res.short
pred.short
rolling.res.short
# There seem to be a slowly damping behavior which might support difference the data
plotts.sample.wge(df$AVG_EP)
2*pi
2*cos(2*pi*0.84)
factor.wge(c(rep(0,11),1))
2*cos(2*pi*0.8333)
2*cos(2*pi*0.08333)
est111111 = est.ar.wge(d1, p=15, type='burg')
factor.wge(c(rep(0,11),1))
pred.short
plotts.wge(df$AVG_EP)
plotts.sample.wge(df$AVG_EP)
# slowly damping autocorrelations
# spectral density peaks at 0 (wandering behavior)
# possible seasonal peak at 1/12 = .0833333 (monthly)
est.ar.wge(df$AVG_EP,p=15,type="burg")
factor.wge(phi=c(rep(0,11),1))
# take difference and look at acf
AVE_EP_d1 = artrans.wge(df$AVG_EP,phi.tr=1)
acf(AVE_EP_d1)
acf(AVE_EP_d1)
dev.off()
acf(AVE_EP_d1)
plotts.sample.wge(AVE_EP_d1)
# characteristic seasonal component for 12 months (ACF large at multiples of 12)
AVE_EP_d1_s12 = artrans.wge(AVE_EP_d1,phi.tr=c(rep(0,11),1))
plotts.sample.wge(AVE_EP_d1_s12)
acf(AVE_EP_d1_s12)
dev.off()
acf(AVE_EP_d1_s12)
# doesn't look like white noise
aic5.wge(AVE_EP_d1_s12,p=0:15) #13,0 12,2 12,0
# doesn't look like white noise
# aic5.wge(AVE_EP_d1_s12,p=0:15) #13,0 12,2 12,0
EP_est = est.arma.wge(AVE_EP_d1_s12,p=12)
# short 3 month ARUMA(12,1,0) s=12
roll.win.ase.wge(df$AVG_EP,horizon=3,s=12,d=1,phis=EP_est$phi,thetas=EP_est$theta)
EP_est$theta
#   2.8495e-05 -> 0.0000285
f.short = fore.aruma.wge(df$AVG_EP,phi=EP_est$phi,theta=EP_est$theta,s=12,d=1,n.ahead=3,lastn=TRUE)
ASE.short = mean((df$AVG_EP[264:266]-f.short$f)^2)
ASE.short #3.595854e-05
# long 36 month ARUMA(12,1,0) s=12
roll.win.ase.wge(df$AVG_EP,horizon=36,s=12,d=1,phis=EP_est$phi,thetas=EP_est$theta)
# 0.0004547268
f.long = fore.aruma.wge(df$AVG_EP,phi=EP_est$phi,theta=EP_est$theta,s=12,d=1,n.ahead=36,lastn=TRUE)
# 0.0004547268
f.long = fore.arima.wge(df$AVG_EP,phi=EP_est$phi,theta=EP_est$theta,s=12,d=1,n.ahead=36,lastn=TRUE)
ASE.long = mean((df$AVG_EP[(266-36+1):266]-f.long$f)^2)
ASE.long
# try other AIC5 options with long forecast: ARUMA(13,1,0) s=12
EP_est_13 = est.arma.wge(AVE_EP_d1_s12,p=13)
#   0.0004697769
f = fore.aruma.wge(df$AVG_EP,phi=EP_est_13$phi,theta=EP_est_13$theta,s=12,d=1,n.ahead=36,lastn=TRUE)
#   0.0004697769
f = fore.arima.wge(df$AVG_EP,phi=EP_est_13$phi,theta=EP_est_13$theta,s=12,d=1,n.ahead=36,lastn=TRUE)
mean((df$AVG_EP[(266-36+1):266]-f$f)^2)
# try 12,2 ARUMA(12,1,2) s=12
EP_est_12_2 = est.arma.wge(AVE_EP_d1_s12,p=12,q=2)
# roll.win.ase.wge(df$AVG_EP,horizon=36,s=12,d=1,phis=EP_est_12_2$phi,thetas=EP_est_12_2$theta)
#  0.0004835913
f = fore.aruma.wge(df$AVG_EP,phi=EP_est_12_2$phi,theta=EP_est_12_2$theta,s=12,d=1,n.ahead=36,lastn=TRUE)
mean((df$AVG_EP[(266-36+1):266]-f$f)^2)
# roll.win.ase.wge(df$AVG_EP,horizon=36,s=12,d=1,phis=EP_est_12_2$phi,thetas=EP_est_12_2$theta)
#  0.0004835913
f = fore.arima.wge(df$AVG_EP,phi=EP_est_12_2$phi,theta=EP_est_12_2$theta,s=12,d=1,n.ahead=36,lastn=TRUE)
mean((df$AVG_EP[(266-36+1):266]-f$f)^2)
# Try another model entirely - take 1st diff then fit an ARMA
AVE_EP_d1 = artrans.wge(df$AVG_EP,phi.tr=1)
# ARIMA(15,1,5)
EP_est_15_5 = est.arma.wge(AVE_EP_d1,p=15,q=5)
# short 3 month
# roll.win.ase.wge(df$AVG_EP,horizon=3,d=1,phis=EP_est_15_5$phi,thetas=EP_est_15_5$theta)
#   3.695999e-05
f.short.15.5 = fore.arima.wge(df$AVG_EP,phi=EP_est_15_5$phi,theta=EP_est_15_5$theta,d=1,n.ahead=3,lastn=TRUE)
# short 3 month
# roll.win.ase.wge(df$AVG_EP,horizon=3,d=1,phis=EP_est_15_5$phi,thetas=EP_est_15_5$theta)
#   3.695999e-05
dev.off()
f.short.15.5 = fore.arima.wge(df$AVG_EP,phi=EP_est_15_5$phi,theta=EP_est_15_5$theta,d=1,n.ahead=3,lastn=TRUE)
ASE.short = mean((df$AVG_EP[264:266]-f.short.15.5$f)^2)
ASE.short #4.216765e-05
# 36 month ARIMA(15,1,5)
# roll.win.ase.wge(df$AVG_EP,horizon=36,d=1,phis=EP_est_15_5$phi,thetas=EP_est_15_5$theta)
# 0.0002368869
f.long.15.5 = fore.arima.wge(df$AVG_EP,phi=EP_est_15_5$phi,theta=EP_est_15_5$theta,d=1,n.ahead=36,lastn=TRUE)
ASE.long = mean((df$AVG_EP[(266-36+1):266]-f.long.15.5$f)^2)
ASE.long
# ARIMA(12,1,0)
EP_est_12_0 = est.arma.wge(AVE_EP_d1,p=12)
# short 3 month
# roll.win.ase.wge(df$AVG_EP,horizon=3,d=1,phis=EP_est_12_0$phi)
#  2.661653e-05
f.short.12.0 = fore.aruma.wge(df$AVG_EP,phi=EP_est_12_0$phi,d=1,n.ahead=3,lastn=TRUE)
# short 3 month
# roll.win.ase.wge(df$AVG_EP,horizon=3,d=1,phis=EP_est_12_0$phi)
#  2.661653e-05
f.short.12.0 = fore.arima.wge(df$AVG_EP,phi=EP_est_12_0$phi,d=1,n.ahead=3,lastn=TRUE)
ASE.short = mean((df$AVG_EP[264:266]-f.short.12.0$f)^2)
ASE.short # 8.029078e-05
# 36 month ARIMA(12,1,0)
# roll.win.ase.wge(df$AVG_EP,horizon=36,d=1,phis=EP_est_12_0$phi)
# 0.0002323361
f.long.12.0 = fore.arima.wge(df$AVG_EP,phi=EP_est_12_0$phi,d=1,n.ahead=36,lastn=TRUE)
ASE.long = mean((df$AVG_EP[(266-36+1):266]-f.long.12.0$f)^2)
ASE.long
library(nnfor)
setwd("/Users/mingyang/Desktop/SMU/TimeSeries/ForLiveSession/Unit13")
swa = read.csv("swadelay.csv")
head(swa)
nrow(swa)
SWATrain = ts(swa$arr_delay[1:141], start = c(2004, 1), frequency=12)
SWATest = ts(swa$arr_delay[142:177], start = c(2015, 10), frequency=12)
set.seed(2)
fit.mlp = mlp(SWATrain, reps=50, comb='mean')
fit.mlp
plot(fit.mlp)
fore.mlp = forecast(fit.mlp, h=36)
plot(fore.mlp)
ASE = mean((SWATest-fore.mlp$mean)^2)
ASE #317604252
?mlp
?mlp()
mlp
# All models are wrong some are useful - we will proceed for now
pred.short = fore.arima.wge(df$AVG_EP, phi = params.est$phi, theta = params.est$theta,
d = 1, s = 12, n.ahead = 3, limits = T, lastn = T)
pred.short
acf(d1.12)
d1 = artrans.wge(df$AVG_EP, phi.tr = 1)
# with the differenced data there seem to have some sort of seasonal behavior at 12 left
d1.12 = artrans.wge(d1, phi.tr = c(rep(0,11),0.5))
dev.off()
acf(d1.12)
# with the differenced data there seem to have some sort of seasonal behavior at 12 left
d1.12 = artrans.wge(d1, phi.tr = c(rep(0,11),0.4))
dev.off()
acf(d1.12)
ljung.wge(d1.12, K=24) # K=24 reject white noise hypothesis
ljung.wge(d1.12, K=48) # K = 48 failed to reject null hypothesis of white noise
#libraries
library(tswge)
library(dplyr)
library(tidyverse)
library(readxl)
# Set this to data folder for your file
setwd("/Users/mingyang/Desktop/SMU/TimeSeries/TimeSeriesFinalProject/data")
# Read in DFWA electricity Data
dfwa.electricity = read.csv("AVG_ELEC_DFWA_TX.csv",col.names = c("DATE", "AVG_EP"),
colClasses = c(DATE="character", AVG_EP="character"))
# Read in CPI data for Southern Urban area
cpi = read_excel("SouthernUrbanCPI.xlsx",sheet = "BLS Data Series", skip = 11)
# Getting rid of Half1 and Half2 which starts with S
cpi = cpi %>% filter(!grepl('S',Period) )
# Getting rid of Annual which labeled as M13
cpi = cpi %>% filter(!grepl('M13',Period) )
# Read in Gas Price data from same area
gas.price = read.csv("Dallas_FWA_GAS.csv")
# Read in Temperature Data & cleaning
temp = read_excel("DallasAreaTemp.xlsx", sheet = "Sheet1")
temp = temp %>% tidyr::pivot_longer(
cols = starts_with("Mon_"),
names_to = "Month",
values_to = "Temperature"
)
temp = temp[1:386,]
# subset dataset
# which(dfwa.electricity$DATE=="1990-01-01") # 135
dfwa.electricity = dfwa.electricity[135:520,]
rownames(dfwa.electricity) <- 1:nrow(dfwa.electricity)
# which(cpi$Year==1990 & cpi$Period=="M01")
cpi = cpi[91:476,]
rownames(cpi) <- 1:nrow(cpi)
# which(gas.price$DATE=="1990-01-01") # 145
gas.price = gas.price[145:530,]
rownames(gas.price) <- 1:nrow(gas.price)
#### Creating ultimate data frame under variable 'df' ####
df = dfwa.electricity
df$CPI = cpi$Value
df$GAS_P = gas.price$APUS37A7471A
df$AVG_EP = as.numeric(df$AVG_EP)
df$TEMP = temp$Temperature
#### Due to distribution market deregulation in 1995, team decided to cut the realization
#### prior to 2000
# which(df$DATE=="2000-01-01") # 121
df = df[121:386,]
rownames(df) <- 1:nrow(df)
plotts.wge(df$AVG_EP)
plotts.wge(df$CPI)
plotts.wge(df$GAS_P)
plotts.wge(df$TEMP)
# There seem to be a slowly damping behavior which might support difference the data
plotts.sample.wge(df$AVG_EP)
# Try overfitting
est = est.ar.wge(df$AVG_EP, p=16, type='burg')
# compare this to seasonality of 12
factor.wge(phi = c(rep(0,11),1))
d1 = artrans.wge(df$AVG_EP, phi.tr = 1)
# with the differenced data there seem to have some sort of seasonal behavior at 12 left
d1.12 = artrans.wge(d1, phi.tr = c(rep(0,11),0.4))
dev.off()
acf(d1.12)
ljung.wge(d1.12, K=24) # K=24 reject white noise hypothesis
ljung.wge(d1.12, K=48) # K = 48 failed to reject null hypothesis of white noise
est1.12 = aic5.wge(d1.12, p=0:15, q=0:5) # AIC picked p = 13, q=5
est.1.12.bic = aic5.wge(d1.12, p=0:15, q=0:5, type = 'bic') # bic picked p=12, q=0
est.1.12.aicc = aic5.wge(d1.12, p=0:15, q=0:5, type = 'aicc') # aicc picked p=13, q=15
# seems AIC leaning towards a fancy model, while bic leaning towards white noise.
# I will attempt something in the middle by using AR(1) instead
params.est = est.arma.wge(d1.12, p=1)
acf(params.est$res) # residuals looks about white noise even there is big negative ACF at lag 24 (which might be an issue)
ljung.wge(params.est$res, K=24) # K=24 reject white noise hypothesis
ljung.wge(params.est$res, K=48) # K = 48 failed to reject null hypothesis of white noise
# Try facier model identified by AIC
params.est = est.arma.wge(d1.12, p=7,q=4)
acf(params.est$res) # residuals looks about white noise
ljung.wge(params.est$res, K=24) # K=24 reject white noise hypothesis
ljung.wge(params.est$res, K=48) # K = 48reject null hypothesis of white noise
acf(params.est$res) # residuals looks about white noise
params.est$phi
c(rep(0,11),0.4)
# All models are wrong some are useful - we will proceed with fancier model for now
model1.param = mult.wge(fac1 = params.est$phi, fac2 = c(rep(0,11),0.4))
model1.param
pred.short = fore.arima.wge(df$AVG_EP, phi = model1.param$model.coef, theta = params.est$theta,
d = 1, n.ahead = 3, limits = T, lastn = T)
ASE.short = mean((df$AVG_EP[264:266]-pred.short$f)^2)
ASE.short # 3.184093e-05 -> 0.0000318
pred.long = fore.arima.wge(df$AVG_EP, phi = model1.param$model.coef, theta = params.est$theta,
d = 1, n.ahead = 36, limits = T, lastn = T)
ASE.long = mean((df$AVG_EP[(266-36+1):266]-pred.long$f)^2)
ASE.long # 0.00137612
rolling.res.short = roll.win.rmse.wge(df$AVG_EP,phi = model1.param$model.coef, theta = params.est$theta, d = 1, horizon = 3 )
model1.param0.004^2
0.004^2
rolling.res.short
rolling.res.long = roll.win.rmse.wge(df$AVG_EP,phi = model1.param$model.coef, theta = params.est$theta, d = 1, horizon = 36)
0.014^2
